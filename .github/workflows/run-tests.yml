name: run-tests

on:
    push:
    pull_request:
    schedule:
        - cron: "0 0 * * *"

jobs:
    run-tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [8.4]

        name: PHP ${{ matrix.php }}

        steps:
            # --------------------------
            # Update APT for runtime & build dependencies
            # --------------------------
            - name: Update apt
              run: sudo apt-get update --fix-missing

            # --------------------------
            # Checkout code
            # --------------------------
            - name: Checkout code
              uses: actions/checkout@v5

            # --------------------------
            # Setup PHP with all extensions
            # --------------------------
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: >
                      swoole, dom, curl, libxml, mbstring, zip, pcntl, pdo,
                      sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif,
                      iconv, imagick, sockets, opcache, redis, xdebug
                  coverage: none
                  tools: composer, cs2pr

            # --------------------------
            # Install runtime & build dependencies from Dockerfile
            # --------------------------
            - name: Install required system libraries
              run: |
                  sudo apt-get install -y git unzip libzip-dev libssl-dev libcurl4-openssl-dev \
                  libnghttp2-dev libsqlite3-dev libpq-dev libbrotli-dev libc-ares-dev supervisor \
                  autoconf build-essential pkg-config \
                  && sudo rm -rf /var/lib/apt/lists/*

            # --------------------------
            # Cache Composer dependencies
            # --------------------------
            - name: Cache Composer
              uses: actions/cache@v4
              with:
                  path: ~/.composer/cache
                  key: composer-${{ matrix.php }}-${{ hashFiles('composer.lock') }}

            # --------------------------
            # Install PHP dependencies
            # --------------------------
            - name: Install dependencies
              run: composer install --optimize-autoloader --prefer-dist

            # --------------------------
            # Setup Problem Matchers
            # --------------------------
            - name: Setup Problem Matches
              run: |
                  echo "::add-matcher::${{ runner.tool_cache }}/php.json"
                  echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            # --------------------------
            # Run PHP code quality checks
            # --------------------------
            - name: Run PHPCS
              run: vendor/bin/phpcs ./src --encoding=utf-8 --standard=phpcs.xml --runtime-set testVersion 8.4 --parallel=1 --report=checkstyle | cs2pr

            # - name: Run PHPMD
            #   run: vendor/bin/phpmd ./src checkstyle phpmd.xml | cs2pr

            - name: Run PHPStan
              run: vendor/bin/phpstan analyse --configuration=phpstan.neon --memory-limit=-1 --error-format=checkstyle | cs2pr

            # --------------------------
            # Prepare SQLite database
            # --------------------------
            - name: Prepare SQLite
              run: |
                mkdir -p database
                touch database/testing.sqlite
                chmod 666 database/testing.sqlite

            # --------------------------
            # Execute PHPUnit tests
            # --------------------------
            - name: Execute tests
              run: vendor/bin/phpunit --configuration phpunit.xml
