<?xml version="1.0"?>
<ruleset name="ProductionStrictStandard">
    <description>
        Harmonized PHPCS ruleset for PHP 8.4 microservices
        - PSR-12 baseline
        - Slevomat strict typing modern PHP
        - Class function docblocks
        - Critical complexity checks
        - Non-critical rules excluded (file comment, closing declaration, mixed type)
    </description>

    <!-- Scan these directories -->
    <file>./src</file>
    <file>./tests</file>

    <config name="bootstrap" value="./tests/bootstrap.php"/>

    <!-- Base standard -->
    <rule ref="PSR12"/>

    <!-- Slevomat: strict typing & modern PHP -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>
    <rule ref="SlevomatCodingStandard.Classes.RequireSelfReference"/>
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <exclude name="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.IncorrectWhitespaceBeforeDeclare"/>
        <exclude name="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.IncorrectStrictTypesFormat"/>
    </rule>

    <!-- Docblocks & PHPDoc alignment -->
    <rule ref="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>
    <rule ref="Squiz.Commenting.ClassComment"/>
    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName" />
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturn" />
    </rule>
    
    <rule ref="SlevomatCodingStandard.TypeHints">
        <!-- Exclude disallowed mixed type -->
        <exclude name="SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.UnionTypeHintFormat"/>
        <exclude name="SlevomatCodingStandard.TypeHints.LongTypeHints.UsedLongTypeHint"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.DNFTypeHintFormat"/>

    <rule ref="Squiz.Commenting">
        <!-- Exclude file-level comments completely -->
        <exclude name="Squiz.Commenting.FileComment"/>
        <exclude name="Squiz.Commenting.ClosingDeclarationComment"/>
        <exclude name="Squiz.Commenting.ClassComment"/>
        <exclude name="Squiz.Commenting.FunctionComment"/>
        <exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen"/>
    </rule>

    <rule ref="Generic.Files">
        <exclude name="Generic.Files.LineLength.TooLong"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting">
        <!-- Non-critical rules as warnings -->
        <exclude name="SlevomatCodingStandard.Commenting.DisallowCommentAfterCode.DisallowedCommentAfterCode"/>
        <exclude name="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment.OneLinePropertyComment"/>
        <exclude name="SlevomatCodingStandard.Commenting.DocCommentSpacing"/>
        <exclude name="SlevomatCodingStandard.Commenting.EmptyComment.EmptyComment"/>
        <exclude name="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.InvalidFormat"/>
        <exclude name="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable"/>
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLineDocComment.MultiLineDocComment"/>
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints">
    <exclude name="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax.DisallowedArrayTypeHintSyntax"/>
    </rule>
    <rule ref="Squiz.Commenting">
    <exclude name="Squiz.Commenting.BlockComment.NoNewLine"/>
    <exclude name="Squiz.Commenting.BlockComment.WrongStart"/>
    <exclude name="Squiz.Commenting.FunctionCommentThrowTag.Missing"/>
    <exclude name="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber"/>
    <exclude name="Squiz.Commenting.InlineComment.DocBlock"/>
    <exclude name="Squiz.Commenting.InlineComment.Empty"/>
    <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>
    <exclude name="Squiz.Commenting.InlineComment.NotCapital"/>
    <exclude name="Squiz.Commenting.InlineComment.SpacingAfter"/>
    <exclude name="Squiz.Commenting.InlineComment.SpacingBefore"/>
    <exclude name="Squiz.Commenting.LongConditionClosingComment.Missing"/>
    <exclude name="Squiz.Commenting.PostStatementComment.Found"/>
    <exclude name="Squiz.Commenting.VariableComment.IncorrectVarType"/>
    <exclude name="Squiz.Commenting.VariableComment.Missing"/>
    <exclude name="Squiz.Commenting.VariableComment.MissingVar"/>
    <exclude name="Squiz.Commenting.VariableComment.WrongStyle"/>
    </rule>

    <!-- Exclude unnecessary paths -->
    <exclude-pattern>vendor/*</exclude-pattern>
    <exclude-pattern>build/*</exclude-pattern>
    <exclude-pattern>.git/*</exclude-pattern>
    <exclude-pattern>.github/*</exclude-pattern>
    <exclude-pattern>.idea/*</exclude-pattern>
    <exclude-pattern>.vscode/*</exclude-pattern>

    <!-- CI-friendly options -->
    <arg name="report" value="full"/>
    <arg name="extensions" value="php"/>
    <arg name="severity" value="1"/>
    <arg name="error-severity" value="1"/>
    <arg name="warning-severity" value="0"/>
    <arg name="parallel" value="4"/>
    <arg name="encoding" value="utf-8"/>
    <arg name="tab-width" value="4"/>
</ruleset>
