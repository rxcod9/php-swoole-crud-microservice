services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php-swoole-crud-microservice:latest
    volumes:
      - .:/app
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    environment:
      APP_ENV: prod
      DB_DRIVER: mysql
      DB_DSN: mysql:host=mysql;dbname=app;charset=utf8mb4
      DB_USER: app
      DB_PASS: app
      DB_POOL_MIN: 5
      DB_POOL_MAX: 200
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_POOL_MIN: 5
      REDIS_POOL_MAX: 200
      SWOOLE_WORKER_NUM: 4
      SWOOLE_TASK_WORKER_NUM: 4
      SWOOLE_MAX_REQUEST: 10000
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
    ports:
      - "9501:9501"
    depends_on: [mysql, redis]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  metrics:
    build: .
    command: php public/metrics-server.php
    ports:
      - "9310:9310"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9310"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on: [app]

  mysql:
    image: mysql:8.4
    environment:
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: app
      MYSQL_ROOT_PASSWORD: root
    ports: ["3306:3306"]
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost","-uapp","-papp"]
      interval: 5s
      timeout: 2s
      retries: 20

  mysqld-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld_exporter
    environment:
      DATA_SOURCE_NAME: "root:root@(mysql:3306)/"
    volumes:
      - ./docker/mysql/.my.cnf:/etc/mysql/.my.cnf:ro
    command:
      - '--config.my-cnf=/etc/mysql/.my.cnf'
    ports:
      - "9104:9104"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9104/metrics"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - mysql

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on: [mysqld-exporter, metrics, app]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    # environment:
    #   - GF_SECURITY_ADMIN_USER=admin
    #   - GF_SECURITY_ADMIN_PASSWORD=admin
    # volumes:
    #   - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on: [prometheus]

  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 20

  caddy:
    image: caddy:2
    ports: ["443:443","80:80"]
    volumes:
      - ./docker/Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on: [app]
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "https://localhost/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger_ui
    environment:
      SWAGGER_JSON: /app/swagger.json
    volumes:
      - ./public/swagger.json:/app/swagger.json:ro
    ports:
      - "8080:8080"
    depends_on: [app]
